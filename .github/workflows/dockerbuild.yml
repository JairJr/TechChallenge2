name: Docker Image CI

on:
  push:
    branches: [ TechChallenge3 ]
  pull_request:
    branches: [ TechChallenge3 ]

env:
  NOME_WEBAPP: techchallenge3dotnet
  IMAGEM_AZURECR: ${{ secrets.DOCKER_CONTEINER_REGISTRY }}/apinoticias-newman
  CAMINHO_PROJETO_WEBAPP: ./TechChallenge2/NoticiasAPI
  CAMINHO_TESTES: ./TechChallenge2/Postman

jobs:
  build-tests-push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Replace Connection String
      run: |
        cd ${{ env.CAMINHO_PROJETO_WEBAPP }}
        sed -i 's|${{ secrets.SQL_SERVER_CONNSTRING }}|'"$SQL_SERVER_CONNSTRING"'|' appsettings.json 
        sed -i 's|${{ secrets.SQL_SERVER_CONNSTRING }}|'"$SQL_SERVER_CONNSTRING"'|' appsettings.Development.json 
      env:
        CONNECTION_STRING: ${{ secrets.SQL_SERVER_CONNSTRING }}

    - name: Build de imagem
      run: |
        cd ${{ env.CAMINHO_PROJETO_WEBAPP }}
        docker build . --file Dockerfile --tag ${{ env.IMAGEM_AZURECR }}:latest
  
    - name: Criação de container para testes com a API
      run: |
        docker run --name api-testes -p 5000:80 -d ${{ env.IMAGEM_AZURECR }}:latest
        docker container ls
        
    - name: Testes da API REST com Newman
      run: |
        cd ${{ env.CAMINHO_TESTES }}
        newman run NoticiasAPI.postman_collection.json
      
    - name: Login no Azure Container Registry
      uses: docker/login-action@v1.8.0
      with:
        registry: ${{ secrets.DOCKER_CONTEINER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Geração de tag com número do Build e Push no Azure Container Registry
      run: |
        docker tag ${{ env.IMAGEM_AZURECR }}:latest ${{ env.IMAGEM_AZURECR }}:$GITHUB_RUN_NUMBER
        docker push --all-tags ${{ env.IMAGEM_AZURECR }}
  deployment-azwebapp:
    needs: [build-tests-push]
    
    runs-on: ubuntu-latest

    steps:
    - name: Azure Login - Conectando com Credenciais no Azure
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure WebApp - Deployment da Aplicacao
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.NOME_WEBAPP }}
        images: '${{ env.IMAGEM_AZURECR }}:${{ github.run_number }}'
